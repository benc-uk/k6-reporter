var e={557:e=>{e.exports=function e(t,n,i){function s(r,c){if(!n[r]){if(!t[r]){if(a)return a(r,!0);var o=new Error("Cannot find module '"+r+"'");throw o.code="MODULE_NOT_FOUND",o}var l=n[r]={exports:{}};t[r][0].call(l.exports,function(e){return s(t[r][1][e]||e)},l,l.exports,e,t,n,i)}return n[r].exports}for(var a=void 0,r=0;r<i.length;r++)s(i[r]);return s}({1:[function(e,t,n){var i=e("fs"),s=e("path"),a=e("./utils"),r=!1,c=e("../package.json").version,o="locals",l=["delimiter","scope","context","debug","compileDebug","client","_with","rmWhitespace","strict","filename","async"],d=l.concat("cache"),h=/^\uFEFF/,u=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;function m(e,t){var s;if(t.some(function(t){return s=n.resolveInclude(e,t,!0),i.existsSync(s)}))return s}function v(e,t){var i,s=e.filename,a=arguments.length>1;if(e.cache){if(!s)throw new Error("cache option requires a filename");if(i=n.cache.get(s))return i;a||(t=p(s).toString().replace(h,""))}else if(!a){if(!s)throw new Error("Internal EJS error: no file name or template provided");t=p(s).toString().replace(h,"")}return i=n.compile(t,e),e.cache&&n.cache.set(s,i),i}function p(e){return n.fileLoader(e)}function f(e,t){var s=a.shallowCopy(a.createNullProtoObjWherePossible(),t);if(s.filename=function(e,t){var s,a,r=t.views,c=/^[A-Za-z]+:\\|^\//.exec(e);if(c&&c.length)e=e.replace(/^\/*/,""),s=Array.isArray(t.root)?m(e,t.root):n.resolveInclude(e,t.root||"/",!0);else if(t.filename&&(a=n.resolveInclude(e,t.filename),i.existsSync(a)&&(s=a)),!s&&Array.isArray(r)&&(s=m(e,r)),!s&&"function"!=typeof t.includer)throw new Error('Could not find the include file "'+t.escapeFunction(e)+'"');return s}(e,s),"function"==typeof t.includer){var r=t.includer(e,s.filename);if(r&&(r.filename&&(s.filename=r.filename),r.template))return v(s,r.template)}return v(s)}function b(e,t,n,i,s){var a=t.split("\n"),r=Math.max(i-3,0),c=Math.min(a.length,i+3),o=s(n),l=a.slice(r,c).map(function(e,t){var n=t+r+1;return(n==i?" >> ":"    ")+n+"| "+e}).join("\n");throw e.path=o,e.message=(o||"ejs")+":"+i+"\n"+l+"\n\n"+e.message,e}function g(e){return e.replace(/;(\s*$)/,"$1")}function x(e,t){var i=a.hasOwnOnlyObject(t),s=a.createNullProtoObjWherePossible();this.templateText=e,this.mode=null,this.truncate=!1,this.currentLine=1,this.source="",s.client=i.client||!1,s.escapeFunction=i.escape||i.escapeFunction||a.escapeXML,s.compileDebug=!1!==i.compileDebug,s.debug=!!i.debug,s.filename=i.filename,s.openDelimiter=i.openDelimiter||n.openDelimiter||"<",s.closeDelimiter=i.closeDelimiter||n.closeDelimiter||">",s.delimiter=i.delimiter||n.delimiter||"%",s.strict=i.strict||!1,s.context=i.context,s.cache=i.cache||!1,s.rmWhitespace=i.rmWhitespace,s.root=i.root,s.includer=i.includer,s.outputFunctionName=i.outputFunctionName,s.localsName=i.localsName||n.localsName||o,s.views=i.views,s.async=i.async,s.destructuredLocals=i.destructuredLocals,s.legacyInclude=void 0===i.legacyInclude||!!i.legacyInclude,s.strict?s._with=!1:s._with=void 0===i._with||i._with,this.opts=s,this.regex=this.createRegex()}n.cache=a.cache,n.fileLoader=i.readFileSync,n.localsName=o,n.promiseImpl=new Function("return this;")().Promise,n.resolveInclude=function(e,t,n){var i=s.dirname,a=s.extname,r=(0,s.resolve)(n?t:i(t),e);return a(e)||(r+=".ejs"),r},n.compile=function(e,t){return t&&t.scope&&(r||(console.warn("`scope` option is deprecated and will be removed in EJS 3"),r=!0),t.context||(t.context=t.scope),delete t.scope),new x(e,t).compile()},n.render=function(e,t,n){var i=t||a.createNullProtoObjWherePossible(),s=n||a.createNullProtoObjWherePossible();return 2==arguments.length&&a.shallowCopyFromList(s,i,l),v(s,e)(i)},n.renderFile=function(){var e,t,i,s=Array.prototype.slice.call(arguments),r=s.shift(),c={filename:r};return"function"==typeof arguments[arguments.length-1]&&(e=s.pop()),s.length?(t=s.shift(),s.length?a.shallowCopy(c,s.pop()):(t.settings&&(t.settings.views&&(c.views=t.settings.views),t.settings["view cache"]&&(c.cache=!0),(i=t.settings["view options"])&&a.shallowCopy(c,i)),a.shallowCopyFromList(c,t,d)),c.filename=r):t=a.createNullProtoObjWherePossible(),function(e,t,i){var s;if(!i){if("function"==typeof n.promiseImpl)return new n.promiseImpl(function(n,i){try{n(s=v(e)(t))}catch(e){i(e)}});throw new Error("Please provide a callback function")}try{s=v(e)(t)}catch(e){return i(e)}i(null,s)}(c,t,e)},n.Template=x,n.clearCache=function(){n.cache.reset()},x.modes={EVAL:"eval",ESCAPED:"escaped",RAW:"raw",COMMENT:"comment",LITERAL:"literal"},x.prototype={createRegex:function(){var e="(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)",t=a.escapeRegExpChars(this.opts.delimiter),n=a.escapeRegExpChars(this.opts.openDelimiter),i=a.escapeRegExpChars(this.opts.closeDelimiter);return e=e.replace(/%/g,t).replace(/</g,n).replace(/>/g,i),new RegExp(e)},compile:function(){var e,t,n,i=this.opts,r="",c="",o=i.escapeFunction,l=i.filename?JSON.stringify(i.filename):"undefined";if(!this.source){if(this.generateSource(),r+='  var __output = "";\n  function __append(s) { if (s !== undefined && s !== null) __output += s }\n',i.outputFunctionName){if(!u.test(i.outputFunctionName))throw new Error("outputFunctionName is not a valid JS identifier.");r+="  var "+i.outputFunctionName+" = __append;\n"}if(i.localsName&&!u.test(i.localsName))throw new Error("localsName is not a valid JS identifier.");if(i.destructuredLocals&&i.destructuredLocals.length){for(var d="  var __locals = ("+i.localsName+" || {}),\n",h=0;h<i.destructuredLocals.length;h++){var m=i.destructuredLocals[h];if(!u.test(m))throw new Error("destructuredLocals["+h+"] is not a valid JS identifier.");h>0&&(d+=",\n  "),d+=m+" = __locals."+m}r+=d+";\n"}!1!==i._with&&(r+="  with ("+i.localsName+" || {}) {\n",c+="  }\n"),c+="  return __output;\n",this.source=r+this.source+c}e=i.compileDebug?"var __line = 1\n  , __lines = "+JSON.stringify(this.templateText)+"\n  , __filename = "+l+";\ntry {\n"+this.source+"} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n":this.source,i.client&&(e="escapeFn = escapeFn || "+o.toString()+";\n"+e,i.compileDebug&&(e="rethrow = rethrow || "+b.toString()+";\n"+e)),i.strict&&(e='"use strict";\n'+e),i.debug&&console.log(e),i.compileDebug&&i.filename&&(e=e+"\n//# sourceURL="+l+"\n");try{if(i.async)try{n=new Function("return (async function(){}).constructor;")()}catch(e){throw e instanceof SyntaxError?new Error("This environment does not support async/await"):e}else n=Function;t=new n(i.localsName+", escapeFn, include, rethrow",e)}catch(e){throw e instanceof SyntaxError&&(i.filename&&(e.message+=" in "+i.filename),e.message+=" while compiling ejs\n\n",e.message+="If the above error is not helpful, you may want to try EJS-Lint:\n",e.message+="https://github.com/RyanZim/EJS-Lint",i.async||(e.message+="\n",e.message+="Or, if you meant to create an async function, pass `async: true` as an option.")),e}var v=i.client?t:function(e){return t.apply(i.context,[e||a.createNullProtoObjWherePossible(),o,function(t,n){var s=a.shallowCopy(a.createNullProtoObjWherePossible(),e);return n&&(s=a.shallowCopy(s,n)),f(t,i)(s)},b])};if(i.filename&&"function"==typeof Object.defineProperty){var p=i.filename,g=s.basename(p,s.extname(p));try{Object.defineProperty(v,"name",{value:g,writable:!1,enumerable:!1,configurable:!0})}catch(e){}}return v},generateSource:function(){this.opts.rmWhitespace&&(this.templateText=this.templateText.replace(/[\r\n]+/g,"\n").replace(/^\s+|\s+$/gm,"")),this.templateText=this.templateText.replace(/[ \t]*<%_/gm,"<%_").replace(/_%>[ \t]*/gm,"_%>");var e=this,t=this.parseTemplateText(),n=this.opts.delimiter,i=this.opts.openDelimiter,s=this.opts.closeDelimiter;t&&t.length&&t.forEach(function(a,r){var c;if(0===a.indexOf(i+n)&&0!==a.indexOf(i+n+n)&&(c=t[r+2])!=n+s&&c!="-"+n+s&&c!="_"+n+s)throw new Error('Could not find matching close tag for "'+a+'".');e.scanLine(a)})},parseTemplateText:function(){for(var e,t=this.templateText,n=this.regex,i=n.exec(t),s=[];i;)0!==(e=i.index)&&(s.push(t.substring(0,e)),t=t.slice(e)),s.push(i[0]),t=t.slice(i[0].length),i=n.exec(t);return t&&s.push(t),s},_addOutput:function(e){if(this.truncate&&(e=e.replace(/^(?:\r\n|\r|\n)/,""),this.truncate=!1),!e)return e;e=(e=(e=(e=e.replace(/\\/g,"\\\\")).replace(/\n/g,"\\n")).replace(/\r/g,"\\r")).replace(/"/g,'\\"'),this.source+='    ; __append("'+e+'")\n'},scanLine:function(e){var t,n=this.opts.delimiter,i=this.opts.openDelimiter,s=this.opts.closeDelimiter;switch(t=e.split("\n").length-1,e){case i+n:case i+n+"_":this.mode=x.modes.EVAL;break;case i+n+"=":this.mode=x.modes.ESCAPED;break;case i+n+"-":this.mode=x.modes.RAW;break;case i+n+"#":this.mode=x.modes.COMMENT;break;case i+n+n:this.mode=x.modes.LITERAL,this.source+='    ; __append("'+e.replace(i+n+n,i+n)+'")\n';break;case n+n+s:this.mode=x.modes.LITERAL,this.source+='    ; __append("'+e.replace(n+n+s,n+s)+'")\n';break;case n+s:case"-"+n+s:case"_"+n+s:this.mode==x.modes.LITERAL&&this._addOutput(e),this.mode=null,this.truncate=0===e.indexOf("-")||0===e.indexOf("_");break;default:if(this.mode){switch(this.mode){case x.modes.EVAL:case x.modes.ESCAPED:case x.modes.RAW:e.lastIndexOf("//")>e.lastIndexOf("\n")&&(e+="\n")}switch(this.mode){case x.modes.EVAL:this.source+="    ; "+e+"\n";break;case x.modes.ESCAPED:this.source+="    ; __append(escapeFn("+g(e)+"))\n";break;case x.modes.RAW:this.source+="    ; __append("+g(e)+")\n";break;case x.modes.COMMENT:break;case x.modes.LITERAL:this._addOutput(e)}}else this._addOutput(e)}this.opts.compileDebug&&t&&(this.currentLine+=t,this.source+="    ; __line = "+this.currentLine+"\n")}},n.escapeXML=a.escapeXML,n.__express=n.renderFile,n.VERSION=c,n.name="ejs","undefined"!=typeof window&&(window.ejs=n)},{"../package.json":6,"./utils":2,fs:3,path:4}],2:[function(e,t,n){var i=/[|\\{}()[\]^$+*?.]/g,s=Object.prototype.hasOwnProperty,a=function(e,t){return s.apply(e,[t])};n.escapeRegExpChars=function(e){return e?String(e).replace(i,"\\$&"):""};var r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},c=/[&<>'"]/g;function o(e){return r[e]||e}function l(){return Function.prototype.toString.call(this)+';\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n'}n.escapeXML=function(e){return null==e?"":String(e).replace(c,o)};try{"function"==typeof Object.defineProperty?Object.defineProperty(n.escapeXML,"toString",{value:l}):n.escapeXML.toString=l}catch(e){console.warn("Unable to set escapeXML.toString (is the Function prototype frozen?)")}n.shallowCopy=function(e,t){if(t=t||{},null!=e)for(var n in t)a(t,n)&&"__proto__"!==n&&"constructor"!==n&&(e[n]=t[n]);return e},n.shallowCopyFromList=function(e,t,n){if(n=n||[],t=t||{},null!=e)for(var i=0;i<n.length;i++){var s=n[i];if(void 0!==t[s]){if(!a(t,s))continue;if("__proto__"===s||"constructor"===s)continue;e[s]=t[s]}}return e},n.cache={_data:{},set:function(e,t){this._data[e]=t},get:function(e){return this._data[e]},remove:function(e){delete this._data[e]},reset:function(){this._data={}}},n.hyphenToCamel=function(e){return e.replace(/-[a-z]/g,function(e){return e[1].toUpperCase()})},n.createNullProtoObjWherePossible="function"==typeof Object.create?function(){return Object.create(null)}:{__proto__:null}instanceof Object?function(){return{}}:function(){return{__proto__:null}},n.hasOwnOnlyObject=function(e){var t=n.createNullProtoObjWherePossible();for(var i in e)a(e,i)&&(t[i]=e[i]);return t}},{}],3:[function(e,t,n){},{}],4:[function(e,t,n){(function(e){function t(e,t){for(var n=0,i=e.length-1;i>=0;i--){var s=e[i];"."===s?e.splice(i,1):".."===s?(e.splice(i,1),n++):n&&(e.splice(i,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}function i(e,t){if(e.filter)return e.filter(t);for(var n=[],i=0;i<e.length;i++)t(e[i],i,e)&&n.push(e[i]);return n}n.resolve=function(){for(var n="",s=!1,a=arguments.length-1;a>=-1&&!s;a--){var r=a>=0?arguments[a]:e.cwd();if("string"!=typeof r)throw new TypeError("Arguments to path.resolve must be strings");r&&(n=r+"/"+n,s="/"===r.charAt(0))}return(s?"/":"")+(n=t(i(n.split("/"),function(e){return!!e}),!s).join("/"))||"."},n.normalize=function(e){var a=n.isAbsolute(e),r="/"===s(e,-1);return(e=t(i(e.split("/"),function(e){return!!e}),!a).join("/"))||a||(e="."),e&&r&&(e+="/"),(a?"/":"")+e},n.isAbsolute=function(e){return"/"===e.charAt(0)},n.join=function(){var e=Array.prototype.slice.call(arguments,0);return n.normalize(i(e,function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e}).join("/"))},n.relative=function(e,t){function i(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=n.resolve(e).substr(1),t=n.resolve(t).substr(1);for(var s=i(e.split("/")),a=i(t.split("/")),r=Math.min(s.length,a.length),c=r,o=0;o<r;o++)if(s[o]!==a[o]){c=o;break}var l=[];for(o=c;o<s.length;o++)l.push("..");return(l=l.concat(a.slice(c))).join("/")},n.sep="/",n.delimiter=":",n.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,i=-1,s=!0,a=e.length-1;a>=1;--a)if(47===(t=e.charCodeAt(a))){if(!s){i=a;break}}else s=!1;return-1===i?n?"/":".":n&&1===i?"/":e.slice(0,i)},n.basename=function(e,t){var n=function(e){"string"!=typeof e&&(e+="");var t,n=0,i=-1,s=!0;for(t=e.length-1;t>=0;--t)if(47===e.charCodeAt(t)){if(!s){n=t+1;break}}else-1===i&&(s=!1,i=t+1);return-1===i?"":e.slice(n,i)}(e);return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n},n.extname=function(e){"string"!=typeof e&&(e+="");for(var t=-1,n=0,i=-1,s=!0,a=0,r=e.length-1;r>=0;--r){var c=e.charCodeAt(r);if(47!==c)-1===i&&(s=!1,i=r+1),46===c?-1===t?t=r:1!==a&&(a=1):-1!==t&&(a=-1);else if(!s){n=r+1;break}}return-1===t||-1===i||0===a||1===a&&t===i-1&&t===n+1?"":e.slice(t,i)};var s=function(e,t,n){return e.substr(t,n)}}).call(this,e("_process"))},{_process:5}],5:[function(e,t,n){var i,s,a=t.exports={};function r(){throw new Error("setTimeout has not been defined")}function c(){throw new Error("clearTimeout has not been defined")}function o(e){if(i===setTimeout)return setTimeout(e,0);if((i===r||!i)&&setTimeout)return i=setTimeout,setTimeout(e,0);try{return i(e,0)}catch(t){try{return i.call(null,e,0)}catch(t){return i.call(this,e,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:r}catch(e){i=r}try{s="function"==typeof clearTimeout?clearTimeout:c}catch(e){s=c}}();var l,d=[],h=!1,u=-1;function m(){h&&l&&(h=!1,l.length?d=l.concat(d):u=-1,d.length&&v())}function v(){if(!h){var e=o(m);h=!0;for(var t=d.length;t;){for(l=d,d=[];++u<t;)l&&l[u].run();u=-1,t=d.length}l=null,h=!1,function(e){if(s===clearTimeout)return clearTimeout(e);if((s===c||!s)&&clearTimeout)return s=clearTimeout,clearTimeout(e);try{return s(e)}catch(t){try{return s.call(null,e)}catch(t){return s.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function f(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];d.push(new p(e,t)),1!==d.length||h||o(v)},p.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=f,a.addListener=f,a.once=f,a.off=f,a.removeListener=f,a.removeAllListeners=f,a.emit=f,a.prependListener=f,a.prependOnceListener=f,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},{}],6:[function(e,t,n){t.exports={name:"ejs",description:"Embedded JavaScript templates",keywords:["template","engine","ejs"],version:"3.1.9",author:"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)",license:"Apache-2.0",bin:{ejs:"./bin/cli.js"},main:"./lib/ejs.js",jsdelivr:"ejs.min.js",unpkg:"ejs.min.js",repository:{type:"git",url:"git://github.com/mde/ejs.git"},bugs:"https://github.com/mde/ejs/issues",homepage:"https://github.com/mde/ejs",dependencies:{jake:"^10.8.5"},devDependencies:{browserify:"^16.5.1",eslint:"^6.8.0","git-directory-deploy":"^1.5.1",jsdoc:"^4.0.2","lru-cache":"^4.0.1",mocha:"^10.2.0","uglify-js":"^3.3.16"},engines:{node:">=0.10.0"},scripts:{test:"npx jake test"}}},{}]},{},[1])(1)}},t={};function n(i){var s=t[i];if(void 0!==s)return s.exports;var a=t[i]={exports:{}};return e[i](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var i=n(557);const s="3.0.0";function a(e,t={}){t.title=t.title||`K6 Test Report: ${(new Date).toISOString().slice(0,16).replace("T"," ")}`,t.debug=t.debug||!1,t.theme=t.theme||"default";let n='<!DOCTYPE html>\n<html lang="en">\n  <head> \n    <meta charset="UTF-8" />\n    \n    <link rel="stylesheet" href="https://unpkg.com/purecss@3.0.0/build/pure-min.css" crossorigin="anonymous">\n    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/7.0.1/css/all.min.css" crossorigin="anonymous">\n    <link rel="shortcut icon" href="https://raw.githubusercontent.com/benc-uk/k6-reporter/main/assets/icon.png" type="image/png">\n\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title><%= title %></title>\n    <style>\n      body {\n        margin: 1rem;\n        background-color: #ddd;\n      }\n      footer { \n        float: right;\n        font-size: 0.8rem;\n        color: #777;\n      }\n      footer a {\n        text-decoration: none;\n        color: #777;\n      }\n      .failed {\n        background-color: #ff6666 !important;\n      }     \n      .good {\n        background-color: #3abe3a !important;\n      }   \n      td.failed {\n        font-weight: bold;\n      }\n      h2 {\n        padding-bottom: 4px;\n        border-bottom: solid 3px #cccccc;\n      }\n      h4 {\n        font-size: 1.5rem;\n      }\n      .tabs {\n        display: flex;\n        flex-wrap: wrap; \n      }\n      .tabs label {\n        order: 1; \n        display: block;\n        padding: 1rem 2rem;\n        margin-right: 0.2rem;\n        cursor: pointer;\n        color: #666;\n        background: #ddd;\n        font-weight: bold;\n        font-size: 1.2rem;\n        flex: 1 1;\n        transition: background ease 0.2s;\n        border-top-left-radius: 0.3rem;\n        border-top-right-radius: 0.3rem;\n        border-color: #ccc;\n        border-style: solid;\n        border-width: 2px 2px 0px;\n        box-shadow: inset 0px -3px 7px -1px rgba(0,0,0,0.33);\n      }\n      .tabs .tab {\n        order: 99;\n        flex-grow: 1;\n        width: 100%;\n        display: none;\n        padding: 1rem;\n        background: #fff;\n      }\n      .tabs input[type="radio"] {\n        display: none;\n      }\n      .tabs input[type="radio"]:checked + label {\n        background: #fff;\n        box-shadow: none;\n        color: #000;\n      }\n      .tabs input[type="radio"]:checked + label + .tab {\n        display: block;\n      }\n      .box {\n        flex: 1 1;\n        border-radius: 0.3rem;\n        background-color: #3abe3a;\n        margin: 1rem;\n        padding: 0.5rem;\n        font-size: 2vw; \n        box-shadow: 0px 4px 7px -1px rgba(0,0,0,0.49);\n        color: white;\n        position: relative;\n        overflow: hidden;\n      }\n      .box h4 {\n        margin: 0;\n        padding-bottom: 0.5rem;\n        text-align: center;\n        position: relative;\n        z-index: 50;\n      }\n      .row {\n        display: flex;\n      }\n      .row div {\n        flex: 1 1;\n        text-align: center;\n        margin-bottom: 0.5rem;\n      }\n      .bignum {\n        position: relative;\n        font-size: min(3vw, 40px);\n        z-index: 20;\n      }\n      table {\n        font-size: min(2vw, 22px);\n        width: 100%;\n      }\n      .icon { \n        position: absolute;\n        top: 60%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        color: #0000002d;\n        font-size: 8vw;\n        z-index: 1;\n      }\n      .metricbox {\n        background-color: #5697e2;\n        font-size: 3vw;\n        height: auto;\n      }\n      .metricbox .row {\n        position: relative;\n        z-index: 20;\n      }\n      .sub-groups {\n        padding: 1rem;\n      }\n      .group-header {\n        cursor: pointer;\n      }\n    </style>\n    <script>\n      function groupHeaderClickHandler(e) {\n        let elemSubGroup = e.target.nextElementSibling;\n        if (!elemSubGroup) {\n          return;\n        }\n        let display = elemSubGroup.style.display;\n        elemSubGroup.style.display = !display || display === "block" ? "none" : "block";\n      }\n    <\/script>\n  </head>\n\n  <body>\n    <h1>\n      <svg style="vertical-align:middle" width="50" height="45" viewBox="0 0 50 45" fill="none" class="footer-module--logo--_lkxx"><path d="M31.968 34.681a2.007 2.007 0 002.011-2.003c0-1.106-.9-2.003-2.011-2.003a2.007 2.007 0 00-2.012 2.003c0 1.106.9 2.003 2.012 2.003z" fill="#7D64FF"></path><path d="M39.575 0L27.154 16.883 16.729 9.31 0 45h50L39.575 0zM23.663 37.17l-2.97-4.072v4.072h-2.751V22.038l2.75 1.989v7.66l3.659-5.014 2.086 1.51-3.071 4.21 3.486 4.776h-3.189v.001zm8.305.17c-2.586 0-4.681-2.088-4.681-4.662 0-1.025.332-1.972.896-2.743l4.695-6.435 2.086 1.51-2.239 3.07a4.667 4.667 0 013.924 4.6c0 2.572-2.095 4.66-4.681 4.66z" fill="#7D64FF"></path></svg> \n      &nbsp; <%= title %>\n    </h1>\n\n    <div class="row">\n      <div class="box">\n        <i class="fas fa-globe icon"></i>\n        <h4>Total Requests</h4>\n        <div class="bignum"><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.count %><% } %></div>\n        <div class="bignum"><% if(data.metrics.grpc_reqs) { %><%= data.metrics.grpc_reqs.values.count %><% } %></div>\n      </div>\n      <% if(data.metrics.http_req_failed && data.metrics.http_req_failed.values) { %>\n        <div class="box <% if(data.metrics.http_req_failed.values.passes > 0) { %> failed <% } %>">\n          <i class="far fa-times-circle icon"></i>\n          <h4>Failed Requests</h4>\n          <div class="bignum"><%= data.metrics.http_req_failed.values.passes %></div>\n        </div> \n      <% } %>     \n      <div class="box <% if(thresholdFailures > 0) { %> failed <% } %>">\n        <i class="fas fa-chart-bar icon"></i>\n        <h4>Breached Thresholds</h4>\n        <div class="bignum"><%= thresholdFailures %></div>\n      </div>\n      <div class="box <% if(checkFailures > 0) { %> failed <% } %>">\n        <i class="fas fa-eye icon"></i>\n        <h4>Failed Checks</h4>\n        <div class="bignum"><%= checkFailures %></div>\n      </div>\n    </div>\n\n    <br>\n    \n    <div class="tabs">\n      <input type="radio" name="tabs" id="tabone" checked="checked">\n      <label for="tabone"><i class="far fa-clock"></i> &nbsp; Request Metrics</label>\n      <div class="tab">\n\n        <% if(trendMetrics.length > 0) { %>\n        <h4>Trends & Times</h4>\n        <table class="pure-table pure-table-striped">\n          <thead>\n            <tr>\n              <th></th>\n              <% for (statName of data.options.summaryTrendStats) { %>\n                <th><%= statName.charAt(0).toUpperCase() + statName.slice(1) %></th>\n              <% } %> \n            </tr>\n          </thead>\n          <tbody>\n            <% for (metric of trendMetrics) { \n                let metricData = data.metrics[metric];\n                if (!metricData) continue;\n            %>\n              <tr>\n                <td><b><%= metric %></b></td>\n                <% for (statName of data.options.summaryTrendStats) {\n                     let val = metricData.values[statName];\n                     if (val === undefined) { val = \'n/a\'; }\n                     else { val = val.toFixed(2); }\n                %>\n                  <td class="<%= checkThres(metricData, statName) %>"><%= val %></td>\n                <% } %> \n              </tr>\n            <% } %>\n          </tbody>\n        </table>\n        <% } else { %>\n          <h4>No Trend Metrics Found</h4>\n          <p>Make sure you are collecting trend metrics in your k6 script. See <a href="https://k6.io/docs/using-k6/metrics/#trend-metrics" target="_blank">k6 Trend Metrics Docs</a> for more information.</p>\n        <% } %>\n\n        <% if(rateMetrics.length > 0) { %>\n        <h4>Rates</h4>\n        <table class="pure-table pure-table-striped">\n          <thead>\n            <tr>\n              <th></th>\n              <th>Rate</th> \n              <th>Passes</th>\n              <th>Fails</th>\n            </tr>\n          </thead>\n          <tbody>\n            <% for (metric of rateMetrics) { \n                if (otherMetrics.includes(metric)) continue;\n                let metricData = data.metrics[metric];\n                if (!metricData) continue;\n            %>\n              <tr>\n                <td><b><%= metric %></b></td>\n                <% for (statName of [\'rate\', \'passes\', \'fails\']) {\n                     let val = metricData.values[statName];\n                     if (val === undefined) { val = \'n/a\'; }\n                     else { val = val.toFixed(2); }\n                %>\n                  <td class="<%= checkThres(metricData, statName) %>"><%= val %></td>\n                <% } %> \n  \n              </tr>\n            <% } %>\n          </tbody>\n        </table>\n        <% } %>\n\n        <% if(counterMetrics.length > 0) { %>\n        <h4>Counters</h4>\n        <table class="pure-table pure-table-striped">\n          <thead>\n            <tr>\n              <th></th>\n              <th>Count</th> \n            </tr>\n          </thead>\n          <tbody>\n            <% for (metric of counterMetrics) { \n                if (otherMetrics.includes(metric)) continue;\n                let metricData = data.metrics[metric];\n                if (!metricData) continue;\n            %>\n              <tr>\n                <td><b><%= metric %></b></td>\n                <% for (statName of [\'count\']) {\n                     let val = metricData.values[statName];\n                     if (val === undefined) { val = \'n/a\'; }\n                     else { val = val.toFixed(2); }\n                %>\n                  <td class="<%= checkThres(metricData, statName) %>"><%= val %></td>\n                <% } %> \n              </tr>\n            <% } %>\n          </tbody>\n        </table>\n        <% } %>\n\n        <br>\n        &nbsp;&nbsp; Note. All times are in milli-seconds\n      </div> \n      \x3c!-- ---- end tab ---- --\x3e\n\n      <input type="radio" name="tabs" id="tabtwo">\n      <label for="tabtwo"><i class="fas fa-chart-line"></i> &nbsp; Other Stats</label>\n      <div class="tab">\n        <div class="row">\n          <% if (data.metrics.checks) { %>\n            <div class="box metricbox">\n              <h4>Checks</h4>\n              <i class="fas fa-eye icon"></i>\n              <div class="row"><div>Passed</div><div><%= data.metrics.checks.values.passes %></div></div>\n              <div class="row"><div>Failed</div><div><%= data.metrics.checks.values.fails %></div></div>\n            </div>\n          <% } %>\n\n          <% if (data.metrics.iterations) { %>\n            <div class="box metricbox">\n              <h4>Iterations</h4>\n              <i class="fas fa-redo icon"></i>\n              <div class="row"><div>Total</div><div><%= data.metrics.iterations.values.count %></div></div>\n              <div class="row"><div>Rate</div><div><%= data.metrics.iterations.values.rate.toFixed(2) %>/s</div></div>\n            </div>\n          <% } %>\n\n          <div class="box metricbox">\n            <h4>Virtual Users</h4>\n            <i class="fas fa-user icon"></i>\n            <div class="row"><div>Min</div><div><%= data.metrics.vus ? data.metrics.vus.values.min : 1 %></div></div>\n            <div class="row"><div>Max</div><div><%= data.metrics.vus ? data.metrics.vus.values.max : 1 %></div></div>\n          </div>\n        </div>\n\n        <div class="row">\n          <div class="box metricbox">\n            <h4>Requests</h4>\n            <i class="fas fa-globe icon"></i>\n            <div class="row"><div>Total</div><div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.count %><% } %></div></div>\n            <div class="row"><div>Rate</div><div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.rate.toFixed(2) %>/s<% } %></div></div>\n          </div>\n\n          <div class="box metricbox">\n            <h4>Data Received</h4>\n            <i class="fas fa-cloud-download-alt icon"></i>\n            <div class="row"><div>Total</div><div><%= (data.metrics.data_received.values.count/1000000).toFixed(2) %> MB</div></div>\n            <div class="row"><div>Rate</div><div><%= (data.metrics.data_received.values.rate/1000000).toFixed(2) %> mB/s</div></div>\n          </div>\n\n          <div class="box metricbox">\n            <h4>Data Sent</h4>\n            <i class="fas fa-cloud-upload-alt icon"></i>\n            <div class="row"><div>Total</div><div><%= (data.metrics.data_sent.values.count/1000000).toFixed(2) %> MB</div></div>\n            <div class="row"><div>Rate</div><div><%= (data.metrics.data_sent.values.rate/1000000).toFixed(2) %> mB/s</div></div>\n          </div>   \n        </div>\n      </div>  \n      \x3c!-- ---- end tab ---- --\x3e     \n\n      <input type="radio" name="tabs" id="tabthree">\n      <label for="tabthree"><i class="fas fa-tasks"></i> Checks & Groups</label>\n      <div class="tab">\n        <% function renderGroup(group) { %>\n          <h2 class="group-header" onclick="groupHeaderClickHandler(event)">&bull; Group - <%= group.name %></h2>\n          <div>\n            <% if(group.checks.length > 0) { %>\n              <table class="pure-table pure-table-horizontal" style="width: 100%">\n                <thead>\n                  <tr>\n                    <th>Check Name</th>\n                    <th>Passes</th>\n                    <th>Failures</th>\n                  </tr>\n                </thead>\n                <% for(check of group.checks) { %>\n                  <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">\n                    <td width="50%"><%= check.name %></td><td><%= check.passes %></td><td><%= check.fails %></td>\n                  </tr>\n                <% } %>\n              </table>\n            <% } %>\n            <% if(group.groups.length > 0) { %>\n              <div class="sub-groups">\n                <% for(subGroup of group.groups) { %>\n                  <%- renderGroup(subGroup) %>\n                <% } %>\n              </div>\n            <% } %>\n          </div>\n          <br>\n        <% } %>\n\n        <% for(group of data.root_group.groups) { %>\n          <%- renderGroup(group) %>\n        <% } %>\n\n        <h2>&bull; Other Checks</h2>\n        <table class="pure-table pure-table-horizontal" style="width: 100%">\n          <thead>\n            <tr>\n              <th>Check Name</th>\n              <th>Passes</th>\n              <th>Failures</th>\n            </tr>\n          </thead>\n          <% for(check of data.root_group.checks) { %>\n            <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">\n              <td width="50%"><%= check.name %></td><td><%= check.passes %></td><td><%= check.fails %></td>\n            </tr>\n          <% } %>\n        </table>     \n      </div> \n      \x3c!-- ---- end tab ---- --\x3e\n    </div>\n    <footer>K6 Reporter v<%= version %> - Ben Coleman 2025, <a href="https://github.com/benc-uk/k6-reporter">[GitHub]</a></footer>\n  </body>\n</html>\n';t.theme.startsWith("boot")&&(n='<!doctype html>\n<html lang="en">\n\n<head>\n  <meta charset="utf-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n  <% if (theme.startsWith(\'bootswatch\')) { %>\n  <% const themeName = theme.split(\':\')[1] || \'cerulean\' %>\n  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootswatch/5.3.8/<%=themeName%>/bootstrap.min.css" rel="stylesheet" />\n  <% } else { %>\n  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet">\n  <% } %>\n  <link href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css" rel="stylesheet">\n\n  <title><%= title %></title>\n\n  <style>\n    .icon {\n      width: 50px;\n      height: 50px;\n      background-color: #eee;\n      border-radius: 15px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 39px\n    }\n  </style>\n</head>\n\n<body>\n  <div class="container py-5">\n    <div class="row mb-3">\n      <div class="col-12">\n        <div class="d-md-flex align-items-center justify-content-between text-center">\n          <svg style="vertical-align:middle" width="50" height="45" viewBox="0 0 50 45" fill="none"\n            class="footer-module--logo--_lkxx">\n            <path\n              d="M31.968 34.681a2.007 2.007 0 002.011-2.003c0-1.106-.9-2.003-2.011-2.003a2.007 2.007 0 00-2.012 2.003c0 1.106.9 2.003 2.012 2.003z"\n              fill="#7D64FF"></path>\n            <path\n              d="M39.575 0L27.154 16.883 16.729 9.31 0 45h50L39.575 0zM23.663 37.17l-2.97-4.072v4.072h-2.751V22.038l2.75 1.989v7.66l3.659-5.014 2.086 1.51-3.071 4.21 3.486 4.776h-3.189v.001zm8.305.17c-2.586 0-4.681-2.088-4.681-4.662 0-1.025.332-1.972.896-2.743l4.695-6.435 2.086 1.51-2.239 3.07a4.667 4.667 0 013.924 4.6c0 2.572-2.095 4.66-4.681 4.66z"\n              fill="#7D64FF"></path>\n          </svg>\n          <h2 class="mt-3"><%= title %></h2>\n        </div>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col mb-3">\n        <div class="card p-3" style="height: 239px;">\n          <div class="card-body text-center">\n            <div class="icon bg-info mx-auto mb-3"><i class="bx bx-globe"></i></div>\n            <h5 class="card-title">Total Request</h5>\n              <h1><%= (data.metrics.http_reqs) ? data.metrics.http_reqs.values.count : \'\' %></h1>\n              <h1><%= (data.metrics.grpc_reqs) ? data.metrics.grpc_reqs.values.count : \'\' %></h1>\n          </div>\n        </div>\n      </div>\n      <% if(data.metrics.http_req_failed && data.metrics.http_req_failed.values) { %>\n        <div class="col mb-3">\n          <div class="card p-3 <% if(data.metrics.http_req_failed.values.passes > 0) { %> bg-danger text-white <% } %>" style="height: 239px;">\n            <div class="card-body text-center">\n              <div class="icon bg-white mx-auto mb-3"><i class="text-danger bx bx-window-close"></i></div>\n              <h5 class="card-title">Failed Requests</h5>\n              <h1><%= data.metrics.http_req_failed.values.passes %></h1>\n            </div>\n          </div>\n        </div>\n      <% } %>\n      <div class="col mb-3">\n        <div class="card p-3" style="height: 239px;">\n          <div class="card-body text-center">\n            <div class="icon bg-warning mx-auto mb-3"><i class=\'bx bx-circle-three-quarter\'></i></div>\n            <h5 class="card-title">Breached Thresholds</h5>\n              <h1><%= thresholdFailures %></h1>\n          </div>\n        </div>\n      </div>\n      <div class="col mb-3">\n        <div class="card p-3 <% if(checkFailures > 0) { %> bg-danger text-white <% } %>" style="height: 239px;">\n          <div class="card-body text-center">\n            <div class="icon mx-auto mb-3 <% if(checkFailures == 0) { %> bg-success <% } %>"><i class=\'bx <%= (checkFailures > 0) ? "bx-error-circle text-danger" : "bx-check-circle text-white" %>\'></i></div>\n            <h5 class="card-title">Failed Checks</h5>\n            <h1><%= checkFailures %></h1>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-md-12">\n        <ul class="nav nav-tabs" id="myTab" role="tablist">\n          <li class="nav-item mx-auto" role="presentation">\n            <button class="nav-link active btn-block" id="request-metrics-tab" data-bs-toggle="tab" data-bs-target="#request-metrics"\n              type="button" role="tab" aria-controls="request-metrics" aria-selected="true">Request Metrics</button>\n          </li>\n          <li class="nav-item mx-auto" role="presentation">\n            <button class="nav-link btn-block" id="other-stats-tab" data-bs-toggle="tab" data-bs-target="#other-stats" type="button"\n              role="tab" aria-controls="other-stats" aria-selected="false">Other Stats</button>\n          </li>\n          <li class="nav-item mx-auto" role="presentation">\n            <button class="nav-link btn-block" id="checks-and-group-tab" data-bs-toggle="tab" data-bs-target="#checks-and-groups"\n              type="button" role="tab" aria-controls="checks-and-group" aria-selected="false">Checks & Groups</button>\n          </li>\n        </ul>\n\n        <div class="tab-content mt-3">\n          <div class="tab-pane active" id="request-metrics" role="tabpanel" aria-labelledby="request-metrics-tab">\n            <div class="row">\n              <div class="col-12 mb-3">\n                <div class="table-responsive">\n                  <table class="table table-striped">\n                    <thead>\n                      <th></th>\n                      <th>Count</th>\n                      <th>Rate</th>\n                      <th>Average</th>\n                      <th>Minimum</th>\n                      <th>Median</th>\n                      <th>Maximum</th>\n                      <th>90th Percentile</th>\n                      <th>95th Percentile</th>\n                      <th>99th Percentile</th>\n                    </thead>\n                    <tbody>\n                      <% function checkFailed(metric, valName) { \n                          if(!metric.thresholds) return \'\' \n                          for(thres in metric.thresholds) {\n                            if(thres.includes(valName)) { \n                              if(!metric.thresholds[thres].ok) return \'bg-danger text-white\' \n                              return \'bg-success text-white\' \n                            } \n                          } \n                        } \n                        \n                        for(metricName of standardMetrics) { \n                          if(!data.metrics[metricName]) { continue } \n                          var metric=data.metrics[metricName] %>\n                        <tr>\n                          <td><b><%= metricName %></b></td>\n                          <% if(metric.values.count) { %> <td class="<%= checkFailed(metric, \'count\') %>"><%= metric.values.count.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                          <% if(metric.values.rate) { %> <td class="<%= checkFailed(metric, \'rate\') %>"><%= metric.values.rate.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                          <% if(metric.values.avg) { %> <td class="<%= checkFailed(metric, \'avg\') %>"><%= metric.values.avg.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                          <% if(metric.values.min) { %> <td class="<%= checkFailed(metric, \'min\') %>"><%= metric.values.min.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                          <% if(metric.values.med) { %> <td class="<%= checkFailed(metric, \'med\') %>"><%= metric.values.med.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                          <% if(metric.values.max) { %> <td class="<%= checkFailed(metric, \'max\') %>"><%= metric.values.max.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                          <% if(metric.values[\'p(90)\']) { %> <td class="<%= checkFailed(metric, \'p(90)\') %>"><%= metric.values[\'p(90)\'].toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                          <% if(metric.values[\'p(95)\']) { %> <td class="<%= checkFailed(metric, \'p(95)\') %>"><%= metric.values[\'p(95)\'].toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                          <% if(metric.values[\'p(99)\']) { %> <td class="<%= checkFailed(metric, \'p(99)\') %>"><%= metric.values[\'p(99)\'].toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                        </tr>\n                      <% } %>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              <% first=true \n                var sortedMetrics={} \n                Object.keys(data.metrics).sort().forEach(function(k) {\n                  sortedMetrics[k]=data.metrics[k] \n                }); \n                \n                for(metricName in sortedMetrics) { \n                  if(standardMetrics.includes(metricName) || otherMetrics.includes(metricName)) { continue } \n                  var metric=sortedMetrics[metricName] %>\n\n              <div class="col-md-12 mb-3">\n                <% if(first) { first=false %> <h2>Custom Metrics</h2> <% } %>\n                <div class="table-responsive">\n                  <table class="table striped">\n                    <% if(first) { first=false %>\n                    <thead>\n                      <th></th>\n                      <th>Count</th>\n                      <th>Rate</th>\n                      <th>Average</th>\n                      <th>Minimum</th>\n                      <th>Median</th>\n                      <th>Maximum</th>\n                      <th>90th Percentile</th>\n                      <th>95th Percentile</th>\n                    </thead>\n                    <% } %>\n                    <tbody>\n                      <tr>\n                        <td><b><%= metricName %></b></td>\n                        <% if(metric.values.count) { %> <td class="<%= checkFailed(metric, \'count\') %>"><%= metric.values.count.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                        <% if(metric.values.rate) { %> <td class="<%= checkFailed(metric, \'rate\') %>"><%= metric.values.rate.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                        <% if(metric.values.avg) { %> <td class="<%= checkFailed(metric, \'avg\') %>"><%= metric.values.avg.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                        <% if(metric.values.min) { %> <td class="<%= checkFailed(metric, \'min\') %>"><%= metric.values.min.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                        <% if(metric.values.med) { %> <td class="<%= checkFailed(metric, \'med\') %>"><%= metric.values.med.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                        <% if(metric.values.max) { %> <td class="<%= checkFailed(metric, \'max\') %>"><%= metric.values.max.toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                        <% if(metric.values[\'p(90)\']) { %> <td class="<%= checkFailed(metric, \'p(90)\') %>"><%= metric.values[\'p(90)\'].toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                        <% if(metric.values[\'p(95)\']) { %> <td class="<%= checkFailed(metric, \'p(95)\') %>"><%= metric.values[\'p(95)\'].toFixed(2) %></td> <% } else { %> <td>-</td> <% } %>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <% } %>\n              <div class="col-12">\n                <span class="text-muted"><b>Note</b> All times are in milli-seconds</span>\n              </div>\n            </div>\n          </div>\n          <div class="tab-pane" id="other-stats" role="tabpanel" aria-labelledby="other-stats-tab">\n            <div class="row">\n              <% if (data.metrics.checks) { %>\n              <div class="col-md-4 mb-3">\n                <div class="card text-center">\n                  <div class="card-header d-flex justify-content-between align-items-center">\n                    <span>Checks</span>\n                    <i class=\'bx bx-check-circle\'></i>\n                  </div>\n                  <div class="card-body">\n                    <div class="d-flex justify-content-between">\n                      <div>Passed</div>\n                      <div class="text-right"><%= data.metrics.checks.values.passes %></div>\n                    </div>\n                    <div class="d-flex justify-content-between">\n                      <div>Failed</div>\n                      <div class="text-right"><%= data.metrics.checks.values.fails %></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <% } %>\n              <% if (data.metrics.iterations) { %>\n              <div class="col-md-4 mb-3">\n                <div class="card text-center">\n                  <div class="card-header d-flex justify-content-between align-items-center">\n                    <span>Iterations</span>\n                    <i class=\'bx bx-revision\'></i>\n                  </div>\n                  <div class="card-body">\n                    <div class="d-flex justify-content-between">\n                      <div>Total</div>\n                      <div class="text-right"><%= data.metrics.iterations.values.count %></div>\n                    </div>\n                    <div class="d-flex justify-content-between">\n                      <div>Rate</div>\n                      <div class="text-right"><%= data.metrics.iterations.values.rate.toFixed(2) %>/s</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <% } %>\n              <div class="col-md-4 mb-3">\n                <div class="card text-center">\n                  <div class="card-header d-flex justify-content-between align-items-center">\n                    <span>Virtual Users</span>\n                    <i class=\'bx bx-user\'></i>\n                  </div>\n                  <div class="card-body">\n                    <div class="d-flex justify-content-between">\n                      <div>Min</div>\n                      <div class="text-right"><%= data.metrics.vus ? data.metrics.vus.values.min : 1 %></div>\n                    </div>\n                    <div class="d-flex justify-content-between">\n                      <div>Max</div>\n                      <div class="text-right"><%= data.metrics.vus ? data.metrics.vus.values.max : 1 %></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4 mb-3">\n                <div class="card text-center">\n                  <div class="card-header d-flex justify-content-between align-items-center">\n                    <span>Requests</span>\n                    <i class=\'bx bx-globe-alt\'></i>\n                  </div>\n                  <div class="card-body">\n                    <div class="d-flex justify-content-between">\n                      <div>Total</div>\n                      <div class="text-right"><%= data.metrics.http_reqs ? data.metrics.http_reqs.values.count : \'-\' %></div>\n                    </div>\n                    <div class="d-flex justify-content-between">\n                      <div>Rate</div>\n                      <div class="text-right"><%= data.metrics.http_reqs ? data.metrics.http_reqs.values.rate.toFixed(2) : \'-\' %>/s</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4 mb-3">\n                <div class="card text-center">\n                  <div class="card-header d-flex justify-content-between align-items-center">\n                    <span>Data Received</span>\n                    <i class=\'bx bx-cloud-download\'></i>\n                  </div>\n                  <div class="card-body">\n                    <div class="d-flex justify-content-between">\n                      <div>Total</div>\n                      <div class="text-right"><%= (data.metrics.data_received.values.count/1000000).toFixed(2) %> MB</div>\n                    </div>\n                    <div class="d-flex justify-content-between">\n                      <div>Rate</div>\n                      <div class="text-right"><%= (data.metrics.data_received.values.rate/1000000).toFixed(2) %> mB/s</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4 mb-3">\n                <div class="card text-center">\n                  <div class="card-header d-flex justify-content-between align-items-center">\n                    <span>Data Sent</span>\n                    <i class=\'bx bx-cloud-upload\'></i>\n                  </div>\n                  <div class="card-body">\n                    <div class="d-flex justify-content-between">\n                      <div>Total</div>\n                      <div class="text-right"><%= (data.metrics.data_sent.values.count/1000000).toFixed(2) %> MB</div>\n                    </div>\n                    <div class="d-flex justify-content-between">\n                      <div>Rate</div>\n                      <div class="text-right"><%= (data.metrics.data_sent.values.rate/1000000).toFixed(2) %> mB/s</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="tab-pane" id="checks-and-groups" role="tabpanel" aria-labelledby="checks-and-group-tab">\n            <div class="row">\n              <% for(group of data.root_group.groups) { %>\n              <div class="col-12 mb-3">\n                <h4 class="mb-3">Group - <%= group.name %></h4>\n                <div class="table-responsive">\n                  <table class="table table-striped">\n                    <thead>\n                      <th>Check</th>\n                      <th class="text-right">Passes</th>\n                      <th class="text-right">Failures</th>\n                    </thead>\n                    <tbody>\n                      <% for(check of group.checks) { %>\n                      <tr>\n                        <td class="<% if(check.fails > 0) { %> bg-danger text-white <% } %>"><%= check.name %></td>\n                        <td class="text-right <% if(check.fails > 0) { %> bg-danger text-white <% } %>"><%= check.passes %></td>\n                        <td class="text-right <% if(check.fails > 0) { %> bg-danger text-white <% } %>"><%= check.fails %></td>\n                      </tr>\n                      <% } %>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <% } %>\n              <div class="col-12 mb-3">\n                <h4 class="mb-3">Other Checks</h4>\n                <div class="table-responsive">\n                  <table class="table table-striped">\n                    <thead>\n                      <th>Check</th>\n                      <th class="text-right">Passes</th>\n                      <th class="text-right">Failures</th>\n                    </thead>\n                    <tbody>\n                      <% for(check of data.root_group.checks) { %>\n                      <tr>\n                        <td class="<% if(check.fails > 0) { %> bg-danger text-white <% } %>"><%= check.name %></td>\n                        <td class="text-right <% if(check.fails > 0) { %> bg-danger text-white <% } %>"><%= check.passes %></td>\n                        <td class="text-right <% if(check.fails > 0) { %> bg-danger text-white <% } %>"><%= check.fails %></td>\n                      </tr>\n                      <% } %>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <footer>\n    <div class="row p-4 text-center">\n      <div class="col-12">\n        <span class="text-muted">K6 Reporter v<%= version %> - Ben Coleman 2025, <a href="https://github.com/benc-uk/k6-reporter" class="text-info">[GitHub]</a>. Template designed by Khoerul Umam 2022 <a class="text-info" href="https://github.com/khumam">[GitHub]</a></span>\n      </div>\n    </div>\n  </footer>\n  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js"><\/script>\n</body>\n\n</html>'),"classic"===t.theme&&(n='<!DOCTYPE html>\n<html lang="en">\n  <head> \n    <meta charset="UTF-8" />\n    \n    <link rel="stylesheet" href="https://unpkg.com/purecss@3.0.0/build/pure-min.css" crossorigin="anonymous">\n    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/7.0.1/css/all.min.css" crossorigin="anonymous">\n    <link rel="shortcut icon" href="https://raw.githubusercontent.com/benc-uk/k6-reporter/main/assets/icon.png" type="image/png">\n\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title><%= title %></title>\n    <style>\n      body {\n        margin: 1rem;\n      }\n      footer { \n        float: right;\n        font-size: 0.8rem;\n        color: #777;\n      }\n      footer a {\n        text-decoration: none;\n        color: #777;\n      }\n      .failed {\n        background-color: #ff6666 !important;\n      }     \n      .good {\n        background-color: #3abe3a !important;\n      }   \n      td.failed {\n        font-weight: bold;\n      }\n      h2 {\n        padding-bottom: 4px;\n        border-bottom: solid 3px #cccccc;\n      }\n      .tabs {\n        display: flex;\n        flex-wrap: wrap; \n      }\n      .tabs label {\n        order: 1; \n        display: block;\n        padding: 1rem 2rem;\n        margin-right: 0.2rem;\n        cursor: pointer;\n        color: #666;\n        background: #ddd;\n        font-weight: bold;\n        font-size: 1.2rem;\n        flex: 1 1;\n        transition: background ease 0.2s;\n        border-top-left-radius: 0.3rem;\n        border-top-right-radius: 0.3rem;\n        border-color: #ccc;\n        border-style: solid;\n        border-width: 2px 2px 0px;\n        box-shadow: inset 0px -3px 7px -1px rgba(0,0,0,0.33);\n      }\n      .tabs .tab {\n        order: 99;\n        flex-grow: 1;\n        width: 100%;\n        display: none;\n        padding: 1rem;\n        background: #fff;\n      }\n      .tabs input[type="radio"] {\n        display: none;\n      }\n      .tabs input[type="radio"]:checked + label {\n        background: #fff;\n        box-shadow: none;\n        color: #000;\n      }\n      .tabs input[type="radio"]:checked + label + .tab {\n        display: block;\n      }\n      .box {\n        flex: 1 1;\n        border-radius: 0.3rem;\n        background-color: #3abe3a;\n        margin: 1rem;\n        padding: 0.5rem;\n        font-size: 2vw; \n        box-shadow: 0px 4px 7px -1px rgba(0,0,0,0.49);\n        color: white;\n        position: relative;\n        overflow: hidden;\n      }\n      .box h4 {\n        margin: 0;\n        padding-bottom: 0.5rem;\n        text-align: center;\n        position: relative;\n        z-index: 50;\n      }\n      .row {\n        display: flex;\n      }\n      .row div {\n        flex: 1 1;\n        text-align: center;\n        margin-bottom: 0.5rem;\n      }\n      .bignum {\n        position: relative;\n        font-size: min(6vw, 80px);\n        z-index: 20;\n      }\n      table {\n        font-size: min(2vw, 22px);\n        width: 100%;\n      }\n      .icon { \n        position: absolute;\n        top: 60%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        color: #0000002d;\n        font-size: 8vw;\n        z-index: 1;\n      }\n      .metricbox {\n        background-color: #5697e2;\n        font-size: 3vw;\n        height: auto;\n      }\n      .metricbox .row {\n        position: relative;\n        z-index: 20;\n      }\n      .sub-groups {\n        padding: 1rem;\n      }\n      .group-header {\n        cursor: pointer;\n      }\n    </style>\n    <script>\n      function groupHeaderClickHandler(e) {\n        let elemSubGroup = e.target.nextElementSibling;\n        if (!elemSubGroup) {\n          return;\n        }\n        let display = elemSubGroup.style.display;\n        elemSubGroup.style.display = !display || display === "block" ? "none" : "block";\n      }\n    <\/script>\n  </head>\n\n  <body>\n    <h1>\n      <svg style="vertical-align:middle" width="50" height="45" viewBox="0 0 50 45" fill="none" class="footer-module--logo--_lkxx"><path d="M31.968 34.681a2.007 2.007 0 002.011-2.003c0-1.106-.9-2.003-2.011-2.003a2.007 2.007 0 00-2.012 2.003c0 1.106.9 2.003 2.012 2.003z" fill="#7D64FF"></path><path d="M39.575 0L27.154 16.883 16.729 9.31 0 45h50L39.575 0zM23.663 37.17l-2.97-4.072v4.072h-2.751V22.038l2.75 1.989v7.66l3.659-5.014 2.086 1.51-3.071 4.21 3.486 4.776h-3.189v.001zm8.305.17c-2.586 0-4.681-2.088-4.681-4.662 0-1.025.332-1.972.896-2.743l4.695-6.435 2.086 1.51-2.239 3.07a4.667 4.667 0 013.924 4.6c0 2.572-2.095 4.66-4.681 4.66z" fill="#7D64FF"></path></svg> \n      &nbsp; <%= title %>\n    </h1>\n\n    <div class="row">\n      <div class="box">\n        <i class="fas fa-globe icon"></i>\n        <h4>Total Requests</h4>\n        <div class="bignum"><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.count %><% } %></div>\n        <div class="bignum"><% if(data.metrics.grpc_reqs) { %><%= data.metrics.grpc_reqs.values.count %><% } %></div>\n      </div>\n      <% if(data.metrics.http_req_failed && data.metrics.http_req_failed.values) { %>\n        <div class="box <% if(data.metrics.http_req_failed.values.passes > 0) { %> failed <% } %>">\n          <i class="far fa-times-circle icon"></i>\n          <h4>Failed Requests</h4>\n          <div class="bignum"><%= data.metrics.http_req_failed.values.passes %></div>\n        </div> \n      <% } %>     \n      <div class="box <% if(thresholdFailures > 0) { %> failed <% } %>">\n        <i class="fas fa-chart-bar icon"></i>\n        <h4>Breached Thresholds</h4>\n        <div class="bignum"><%= thresholdFailures %></div>\n      </div>\n      <div class="box <% if(checkFailures > 0) { %> failed <% } %>">\n        <i class="fas fa-eye icon"></i>\n        <h4>Failed Checks</h4>\n        <div class="bignum"><%= checkFailures %></div>\n      </div>\n    </div>\n\n    <br>\n    \n    <div class="tabs">\n      <input type="radio" name="tabs" id="tabone" checked="checked">\n      <label for="tabone"><i class="far fa-clock"></i> &nbsp; Request Metrics</label>\n      <div class="tab">\n        <table class="pure-table pure-table-striped">\n          <tbody>\n            <thead>\n              <tr>\n                <th></th>\n                <th>Average</th>\n                <th>Maximum</th>\n                <th>Median</th> \n                <th>Minimum</th>\n                <th>90th Percentile</th>\n                <th>95th Percentile</th>\n                <th>99th Percentile</th>\n              </tr>\n            </thead>\n            \n            <% function checkFailed(metric, valName) {\n                if(!metric.thresholds) return \'\'\n                for(thres in metric.thresholds) {\n                  if(thres.includes(valName)) {\n                    if(!metric.thresholds[thres].ok) return \'failed\'\n                    return \'good\'\n                  }\n                }\n              }\n\n              for(metricName of standardMetrics) { \n                if(!data.metrics[metricName]) { continue }\n                var metric = data.metrics[metricName] \n            %>\n              <tr>\n                <td><b><%= metricName %></b></td>\n                \n                <% if(metric.values.avg) { %>\n                  <td class="<%= checkFailed(metric, \'avg\') %>"><%= metric.values.avg.toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>\n\n                <% if(metric.values.max) { %>\n                  <td class="<%= checkFailed(metric, \'max\') %>"><%= metric.values.max.toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>  \n\n                <% if(metric.values.med) { %>\n                  <td class="<%= checkFailed(metric, \'med\') %>"><%= metric.values.med.toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>  \n                \n                <% if(metric.values.min) { %>\n                  <td class="<%= checkFailed(metric, \'min\') %>"><%= metric.values.min.toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>   \n                              \n                <% if(metric.values[\'p(90)\']) { %>\n                  <td class="<%= checkFailed(metric, \'p(90)\') %>"><%= metric.values[\'p(90)\'].toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>\n\n                <% if(metric.values[\'p(95)\']) { %>\n                  <td class="<%= checkFailed(metric, \'p(95)\') %>"><%= metric.values[\'p(95)\'].toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td> \n                <% } %>\n\n                <% if(metric.values[\'p(99)\']) { %>\n                  <td class="<%= checkFailed(metric, \'p(99)\') %>"><%= metric.values[\'p(99)\'].toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td> \n                <% } %>\n              </tr>\n            <% } %>\n          </tbody>\n        </table>\n        <br>\n\n        <% \n          first = true \n          var sortedMetrics = {}\n          Object.keys(data.metrics).sort().forEach(function(k) {\n            sortedMetrics[k] = data.metrics[k]\n          });\n          for(metricName in sortedMetrics) {\n            if(standardMetrics.includes(metricName) || otherMetrics.includes(metricName)) { continue }\n            var metric = sortedMetrics[metricName] \n        %>\n          <% if(first) { first = false %> <h2>Custom Metrics</h2> \n          <table class="pure-table pure-table-striped">\n            <tbody>\n              <thead>\n                <tr>\n                  <th></th>\n                  <th>Count</th>\n                  <th>Rate</th>\n                  <th>Average</th>\n                  <th>Maximum</th>\n                  <th>Median</th> \n                  <th>Minimum</th>\n                  <th>90th Percentile</th>\n                  <th>95th Percentile</th>\n                  <th>99th Percentile</th>\n                </tr>\n              </thead>\n              <% } %>\n              <tr>\n                <td><b><%= metricName %></b></td>\n\n                <% if(metric.values.count) { %>\n                  <td class="<%= checkFailed(metric, \'count\') %>"><%= metric.values.count.toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>\n\n                <% if(metric.values.rate) { %>\n                  <td class="<%= checkFailed(metric, \'rate\') %>"><%= metric.values.rate.toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>\n                \n                <% if(metric.values.avg) { %>\n                  <td class="<%= checkFailed(metric, \'avg\') %>"><%= metric.values.avg.toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>\n\n                <% if(metric.values.max) { %>\n                  <td class="<%= checkFailed(metric, \'max\') %>"><%= metric.values.max.toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>  \n\n                <% if(metric.values.med) { %>\n                  <td class="<%= checkFailed(metric, \'med\') %>"><%= metric.values.med.toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>  \n                \n                <% if(metric.values.min) { %>\n                  <td class="<%= checkFailed(metric, \'min\') %>"><%= metric.values.min.toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>   \n                              \n                <% if(metric.values[\'p(90)\']) { %>\n                  <td class="<%= checkFailed(metric, \'p(90)\') %>"><%= metric.values[\'p(90)\'].toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td>\n                <% } %>\n\n                <% if(metric.values[\'p(95)\']) { %>\n                  <td class="<%= checkFailed(metric, \'p(95)\') %>"><%= metric.values[\'p(95)\'].toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td> \n                <% } %>\n\n                <% if(metric.values[\'p(99)\']) { %>\n                  <td class="<%= checkFailed(metric, \'p(99)\') %>"><%= metric.values[\'p(99)\'].toFixed(2) %></td>\n                <% } else { %>\n                  <td>-</td> \n                <% } %>\n              </tr>\n              <% } %>\n            </tbody>\n          </table>\n          <br>\n\n\n        &nbsp;&nbsp; Note. All times are in milli-seconds\n      </div> \n      \x3c!-- ---- end tab ---- --\x3e\n\n      <input type="radio" name="tabs" id="tabtwo">\n      <label for="tabtwo"><i class="fas fa-chart-line"></i> &nbsp; Other Stats</label>\n      <div class="tab">\n        <div class="row">\n          <% if (data.metrics.checks) { %>\n            <div class="box metricbox">\n              <h4>Checks</h4>\n              <i class="fas fa-eye icon"></i>\n              <div class="row"><div>Passed</div><div><%= data.metrics.checks.values.passes %></div></div>\n              <div class="row"><div>Failed</div><div><%= data.metrics.checks.values.fails %></div></div>\n            </div>\n          <% } %>\n\n          <% if (data.metrics.iterations) { %>\n            <div class="box metricbox">\n              <h4>Iterations</h4>\n              <i class="fas fa-redo icon"></i>\n              <div class="row"><div>Total</div><div><%= data.metrics.iterations.values.count %></div></div>\n              <div class="row"><div>Rate</div><div><%= data.metrics.iterations.values.rate.toFixed(2) %>/s</div></div>\n            </div>\n          <% } %>\n\n          <div class="box metricbox">\n            <h4>Virtual Users</h4>\n            <i class="fas fa-user icon"></i>\n            <div class="row"><div>Min</div><div><%= data.metrics.vus ? data.metrics.vus.values.min : 1 %></div></div>\n            <div class="row"><div>Max</div><div><%= data.metrics.vus ? data.metrics.vus.values.max : 1 %></div></div>\n          </div>\n        </div>\n\n        <div class="row">\n          <div class="box metricbox">\n            <h4>Requests</h4>\n            <i class="fas fa-globe icon"></i>\n            <div class="row"><div>Total</div><div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.count %><% } %></div></div>\n            <div class="row"><div>Rate</div><div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.rate.toFixed(2) %>/s<% } %></div></div>\n          </div>\n\n          <div class="box metricbox">\n            <h4>Data Received</h4>\n            <i class="fas fa-cloud-download-alt icon"></i>\n            <div class="row"><div>Total</div><div><%= (data.metrics.data_received.values.count/1000000).toFixed(2) %> MB</div></div>\n            <div class="row"><div>Rate</div><div><%= (data.metrics.data_received.values.rate/1000000).toFixed(2) %> mB/s</div></div>\n          </div>\n\n          <div class="box metricbox">\n            <h4>Data Sent</h4>\n            <i class="fas fa-cloud-upload-alt icon"></i>\n            <div class="row"><div>Total</div><div><%= (data.metrics.data_sent.values.count/1000000).toFixed(2) %> MB</div></div>\n            <div class="row"><div>Rate</div><div><%= (data.metrics.data_sent.values.rate/1000000).toFixed(2) %> mB/s</div></div>\n          </div>   \n        </div>\n      </div>  \n      \x3c!-- ---- end tab ---- --\x3e     \n\n      <input type="radio" name="tabs" id="tabthree">\n      <label for="tabthree"><i class="fas fa-tasks"></i> Checks & Groups</label>\n      <div class="tab">\n        <% function renderGroup(group) { %>\n          <h2 class="group-header" onclick="groupHeaderClickHandler(event)">&bull; Group - <%= group.name %></h2>\n          <div>\n            <% if(group.checks.length > 0) { %>\n              <table class="pure-table pure-table-horizontal" style="width: 100%">\n                <thead>\n                  <tr>\n                    <th>Check Name</th>\n                    <th>Passes</th>\n                    <th>Failures</th>\n                  </tr>\n                </thead>\n                <% for(check of group.checks) { %>\n                  <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">\n                    <td width="50%"><%= check.name %></td><td><%= check.passes %></td><td><%= check.fails %></td>\n                  </tr>\n                <% } %>\n              </table>\n            <% } %>\n            <% if(group.groups.length > 0) { %>\n              <div class="sub-groups">\n                <% for(subGroup of group.groups) { %>\n                  <%- renderGroup(subGroup) %>\n                <% } %>\n              </div>\n            <% } %>\n          </div>\n          <br>\n        <% } %>\n\n        <% for(group of data.root_group.groups) { %>\n          <%- renderGroup(group) %>\n        <% } %>\n\n        <h2>&bull; Other Checks</h2>\n        <table class="pure-table pure-table-horizontal" style="width: 100%">\n          <thead>\n            <tr>\n              <th>Check Name</th>\n              <th>Passes</th>\n              <th>Failures</th>\n            </tr>\n          </thead>\n          <% for(check of data.root_group.checks) { %>\n            <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">\n              <td width="50%"><%= check.name %></td><td><%= check.passes %></td><td><%= check.fails %></td>\n            </tr>\n          <% } %>\n        </table>     \n      </div> \n      \x3c!-- ---- end tab ---- --\x3e\n    </div>\n    <footer>K6 Reporter v<%= version %> - Ben Coleman 2025, <a href="https://github.com/benc-uk/k6-reporter">[GitHub]</a></footer>\n  </body>\n</html>\n'),console.log(`[k6-reporter v${s}] Generating HTML summary report, with theme: ${t.theme}`);const a=[];t.debug&&console.log(JSON.stringify(e,null,2));let r=0,c=0;for(const t in e.metrics)if(Object.prototype.hasOwnProperty.call(e.metrics,t)&&(a.push(t),e.metrics[t].thresholds)){c++;const n=e.metrics[t].thresholds;for(const e in n)n[e].ok||r++}a.sort();let o=0,l=0;!function e(t){if(t.checks){const{passes:e,fails:n}=function(e){let t=0,n=0;for(const i of e)t+=parseInt(i.passes,10),n+=parseInt(i.fails,10);return{passes:t,fails:n}}(t.checks);o+=n,l+=e}for(const n of t.groups)e(n)}(e.root_group);const d=["iterations","data_sent","checks","http_reqs","grpc_reqs","data_received","vus_max","vus","http_req_failed","http_req_duration{expected_response:true}"],h=e.options.summaryTrendStats||[],u=a.filter(t=>"trend"===e.metrics[t].type&&!d.includes(t)),m=a.filter(t=>"rate"===e.metrics[t].type&&!d.includes(t)),v=a.filter(t=>"counter"===e.metrics[t].type&&!d.includes(t)),p=a.filter(t=>"gauge"===e.metrics[t].type&&!d.includes(t));return console.log(u),console.log(m),console.log(v),console.log(p),i.render(n,{data:e,title:t.title,theme:t.theme,trendStats:h,trendMetrics:u,rateMetrics:m,counterMetrics:v,gaugeMetrics:p,standardMetrics:["grpc_req_duration","http_req_duration","http_req_waiting","http_req_connecting","http_req_tls_handshaking","http_req_sending","http_req_receiving","http_req_blocked","iteration_duration","group_duration","ws_connecting","ws_msgs_received","ws_msgs_sent","ws_sessions"],otherMetrics:d,thresholdFailures:r,thresholdCount:c,checkFailures:o,checkPasses:l,version:s,checkThres:(e,t)=>{if(!e.thresholds)return"";for(const n in e.thresholds)if(n.includes(t))return e.thresholds[n].ok??1?"good":"failed"}})}export{a as htmlReport};