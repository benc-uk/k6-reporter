<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <link rel="stylesheet" href="https://unpkg.com/purecss@2.0.3/build/pure-min.css" crossorigin="anonymous">

  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.2/css/all.css" crossorigin="anonymous">

  <link rel="shortcut icon" href="https://raw.githubusercontent.com/Daniel-benages-at-wiris/k6-reporter/main/assets/icon.png" type="image/png">

  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>K6 Load Test: <%= title %></title>
  <style>
    body {
      margin: 1rem;
    }

    footer {
      float: right;
      font-size: 0.8rem;
      color: #777;
    }

    footer a {
      text-decoration: none;
      color: #777;
    }

    .failed {
      background-color: #ff6666 !important;
    }

    .good {
      background-color: #3abe3a !important;
    }

    td.failed {
      font-weight: bold;
    }

    h2 {
      padding-bottom: 4px;
      border-bottom: solid 3px #cccccc;
    }

    .tabs {
      display: flex;
      flex-wrap: wrap;
    }

    .tabs label {
      order: 1;
      display: block;
      padding: 1rem 2rem;
      margin-right: 0.2rem;
      cursor: pointer;
      color: #666;
      background: #ddd;
      font-weight: bold;
      font-size: 1.2rem;
      flex: 1 1;
      transition: background ease 0.2s;
      border-top-left-radius: 0.3rem;
      border-top-right-radius: 0.3rem;
      border-color: #ccc;
      border-style: solid;
      border-width: 2px 2px 0px;
      box-shadow: inset 0px -3px 7px -1px rgba(0, 0, 0, 0.33);
    }

    .tabs .tab {
      order: 99;
      flex-grow: 1;
      width: 100%;
      display: none;
      padding: 1rem;
      background: #fff;
    }

    .tabs input[type="radio"] {
      display: none;
    }

    .tabs input[type="radio"]:checked+label {
      background: #fff;
      box-shadow: none;
      color: #000;
    }

    .tabs input[type="radio"]:checked+label+.tab {
      display: block;
    }

    .box {
      flex: 1 1;
      border-radius: 0.3rem;
      background-color: #3abe3a;
      margin: 1rem;
      padding: 0.5rem;
      font-size: 2vw;
      box-shadow: 0px 4px 7px -1px rgba(0, 0, 0, 0.49);
      color: white;
      position: relative;
      overflow: hidden;
    }

    .box h4 {
      margin: 0;
      padding-bottom: 0.5rem;
      text-align: center;
      position: relative;
      z-index: 50;
    }

    .row {
      display: flex;
    }

    .row div {
      flex: 1 1;
      text-align: center;
      margin-bottom: 0.5rem;
    }

    .bignum {
      position: relative;
      font-size: min(6vw, 80px);
      z-index: 20;
    }

    table {
      font-size: min(2vw, 22px);
      width: 100%;
    }

    .icon {
      position: absolute;
      top: 60%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: #43444325;
      font-size: 5vw;
      z-index: 1;
    }

    .metricbox {
      background-color: #5697e2;
      font-size: 3vw;
      height: auto;
    }

    .metricbox .row {
      position: relative;
      z-index: 20;
    }

    .tooltip {
      position: relative;
      display: inline-block;
    }

    /* Tooltip text */
    .tooltip .tooltiptext {
      visibility: hidden;
      width: 120px;
      background-color: black;
      color: #fff;
      text-align: center;
      padding: 5px 0;
      border-radius: 6px;

      /* Position the tooltip text - see examples below! */
      position: absolute;
      z-index: 1;
    }

    /* Show the tooltip text when you mouse over the tooltip container */
    .tooltip:hover .tooltiptext {
      visibility: visible;
    }
  </style>
</head>

<body>
  <h1>
    <svg style="vertical-align:middle" width="50" height="45" viewBox="0 0 50 45" fill="none" class="footer-module--logo--_lkxx">
      <path d="M31.968 34.681a2.007 2.007 0 002.011-2.003c0-1.106-.9-2.003-2.011-2.003a2.007 2.007 0 00-2.012 2.003c0 1.106.9 2.003 2.012 2.003z" fill="#7D64FF"></path>
      <path d="M39.575 0L27.154 16.883 16.729 9.31 0 45h50L39.575 0zM23.663 37.17l-2.97-4.072v4.072h-2.751V22.038l2.75 1.989v7.66l3.659-5.014 2.086 1.51-3.071 4.21 3.486 4.776h-3.189v.001zm8.305.17c-2.586 0-4.681-2.088-4.681-4.662 0-1.025.332-1.972.896-2.743l4.695-6.435 2.086 1.51-2.239 3.07a4.667 4.667 0 013.924 4.6c0 2.572-2.095 4.66-4.681 4.66z" fill="#7D64FF"></path>
    </svg>
    &nbsp; K6 Load Test: <%= title %>
  </h1>

  <div class="row">
    <div class="box">
      <h4>Requests</h4>
      <i class="fas fa-globe icon"></i>
      <div class="row">
        <div>Total</div>
        <div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.count %><% } %></div>
      </div>
      <div class="row">
        <div>Rate</div>
        <div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.rate.toFixed(2) %>/s<% } %></div>
      </div>
    </div>
    <% if(data.metrics.http_req_failed && data.metrics.http_req_failed.values) { %>
    <div class="box <% var fails; if(checkFailed(data.metrics['http_req_failed'], 'rate') == 'failed') { fails = true %> failed <% } %>">
      <i class="far fa-times-circle icon"></i>
      <h4>Failed Requests</h4>
      <% if(fails) {  %>
      <div class="row">
        <div>Total</div>
        <div><%= data.metrics.http_req_failed.values.passes %></div>
      </div>
      <div class="row">
        <div>Rate</div>
        <% failedRate = (data.metrics.http_req_failed.values.passes / (data.metrics.http_req_failed.values.passes + data.metrics.http_req_failed.values.fails))*100 %>
        <div><%= failedRate.toFixed(2) + '%' %></div>
      </div>
      <%} else {%>
      <div class="bignum"><%= data.metrics.http_req_failed.values.passes %></div>
      <%}%>
    </div>
    <% } %>
      <div class="box <% if(thresholdFailures > 0) { %> failed <% } %>">
        <i class="fas fa-chart-bar icon"></i>
        <h4>Breached Thresholds</h4>
        <div class="bignum"><%= thresholdFailures %></div>
      </div>
      <div class="box <% if(checkFailures > 0) { %> failed <% } %>">
        <h4>Checks</h4>
        <i class="fas fa-eye icon"></i>
        <div class="row">
          <div>Passed</div>
          <div><%= checkPasses %></div>
        </div>
        <div class="row">
          <div>Failed</div>
          <div><%= checkFailures %></div>
        </div>
      </div>
    </div>

    <br>

    <div class="tabs">
      <input type="radio" name="tabs" id="tabone" checked="checked">
      <label for="tabone"><i class="far fa-clock"></i> &nbsp; Request Metrics</label>
      <div class="tab">
        <h2> Request Metrics</h2>
        <table class="pure-table pure-table-striped">
          <tbody>
            <thead>
              <tr>
                <th></th>
                <th>Count</th>
                <th>Average</th>
                <th>Maximum</th>
                <th>Median</th>
                <th>Minimum</th>
                <th>90th Percentile</th>
                <th>95th Percentile</th>
                <th>99th Percentile</th>
              </tr>
            </thead>

            <% function checkFailed(metric, valName) {
              thres = getThreshold(metric, valName)  
              if(!thres) return ''
              if(!metric.thresholds[thres].ok) return 'failed' 
                    return 'good'
                  }

              function getThreshold(metric, valName) {
                for(thres in metric.thresholds) {
                  if(thres.includes(valName)) {
                    return thres
                  }
                }
              }

        for(metricName of standardMetrics) {
        if(!data.metrics[metricName]) { continue }
        var metric = data.metrics[metricName]
        %>
            <tr>
              <td><b><%= metricName %></b></td>

              <% for(metricStat of metricStats) { 
           if(metric.values[metricStat]) {%>
              <td class="<%= checkFailed(metric, metricStat) %>" title="<%= checkFailed(metric, metricStat) + " threshold " + getThreshold(metric, metricStat)%>"><%= metric.values[metricStat].toFixed(2) %></td>
              <% } else { %>
              <td>-</td>
              <% } }%>
            </tr>
            <%}%>
        </tbody>
        </table>
        <br>
        <h2>Data Transfer</h2>
        <table class="pure-table pure-table-horizontal" style="width: 100%">
          <thead>
            <tr>
              <th></th>
              <th>Total</th>
              <th>Rate</th>
            </tr>
          </thead>
          <tr>
            <td width="50%">Data Received</td>
            <% if(data.metrics.data_received) { %>
            <td><%= (data.metrics.data_received.values.count/1000000).toFixed(2) %> MB</td>
            <td><%=(data.metrics.data_received.values.rate/1000000).toFixed(2) %> mB/s</td>
            <% } else { %>
            <td>-</td>
            <td>-</td>
            <% } %>
            </tr>
            <tr>
              <td width="50%">Data Sent</td>
              <% if(data.metrics.data_sent) { %>
              <td><%= (data.metrics.data_sent.values.count/1000000).toFixed(2) %> MB</td>
              <td><%=(data.metrics.data_sent.values.rate/1000000).toFixed(2) %> mB/s</td>
              <% } else { %>
              <td>-</td>
              <td>-</td>
              <% } %>
            </tr>
        </table>
        <br>
        <% 
          first = true 
          var sortedMetrics = {}
          Object.keys(data.metrics).sort().forEach(function(k) {
            sortedMetrics[k] = data.metrics[k]
          });
          for(metricName in sortedMetrics) {
            if(standardMetrics.includes(metricName) || otherMetrics.includes(metricName) || !metricName.includes("counter")) { continue }
            var counter = sortedMetrics[metricName] 
        %>
        <% if(first) { first = false %> <h2>Status Counters</h2>
        <table class="pure-table pure-table-horizontal" style="width: 100%">
          <thead>
            <tr>
              <th>Counter Name</th>
              <th>Count</th>
              <th>Rate</th>
            </tr>
          </thead>
          <% } %>
          <tr>
            <td width="50%"><%= metricName.replaceAll("_", " ").replace("counter", "") %></td>

            <% if(counter.values.count) { %>
            <td class="<%= checkFailed(counter, 'count') %>"><%= counter.values.count %></td>
            <% } else { %>
            <td>-</td>
            <% } %>

            <% if(counter.values.rate) { %>
            <td class="<%= checkFailed(counter, 'rate') %>"><%= (counter.values.count/data.metrics.http_reqs.values.count*100).toFixed(2) + "%" %></td>
            <% } else { %>
            <td>-</td>
            <% } %>
          </tr>
          <% } %>
        </table>
        <br>
        <% for(group of data.root_group.groups) { %>
        <h2> Group - <%= group.name %></h2>
        <table class="pure-table pure-table-horizontal" style="width: 100%">
          <thead>
            <tr>
              <th>Check Name</th>
              <th>Passes</th>
              <th>Failures</th>
            </tr>
          </thead>
          <% for(check of group.checks) { %>
          <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">
            <td width="50%"><%= check.name %></td>
            <td><%= check.passes %></td>
            <td><%= check.fails %></td>
          </tr>
          <% } %>
        </table>
        <br>
        <% } %>

        <% 
        let counterList = {};
        let counterMatrix = {};
        let statusKey = '';
        let endpointList = [];
        for(metricName in sortedMetrics) {
          if(standardMetrics.includes(metricName) || otherMetrics.includes(metricName) || !metricName.includes("counter")) { continue }
          counterList[metricName] = sortedMetrics[metricName]
        }

        for(statusCode of statusList) {
          statusKey = 'Status ' + statusCode;
          counterMatrix[statusKey] = Object.keys(counterList)
          .filter(key => key.includes(statusCode))
          .reduce((obj, key) => {
            obj[key.split('_')[3]] = counterList[key];
            return obj;
          }, {});
        }

        for(counterName of Object.keys(counterList)) {
          let endpoint = counterName.split('_')[3];
          if(!endpointList.includes(endpoint)) endpointList.push(endpoint)
        }
        %>
        <h2>Counter Matrix</h2>
        <table class="pure-table pure-table-horizontal" style="width: 100%">
          <thead>
            <th></th>
            <%for(counter of Object.keys(counterMatrix)){%>
            <th><%=counter %></th>
            <%}%>
          </thead>
          <%for(endpoint of endpointList){%>
            <tr>
              <td width="50%"><%= endpoint %></td>
              <%for(counter of Object.keys(counterMatrix)) {
                if(counterMatrix[counter][endpoint] != undefined) {%>
              <td><%= counterMatrix[counter][endpoint].values.count + ' / ' +  (counterMatrix[counter][endpoint].values.count/data.metrics.http_reqs.values.count*100).toFixed(2) + "%" %></td>
              <%} else {%>
              <td> - </td>
              <%}}%>
            </tr>
            <%}%>
        </table>
        <br>

        <h2> Checks</h2>
        <table class="pure-table pure-table-horizontal" style="width: 100%">
          <thead>
            <tr>
              <th>Check Name</th>
              <th>Passes</th>
              <th>Failures</th>
            </tr>
          </thead>
          <% for(check of data.root_group.checks) { %>
            <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">
              <td width="50%"><%= check.name %></td>
              <td><%= check.passes %></td>
              <td><%= check.fails %></td>
            </tr>
            <% } %>
        </table>
        <br>


        &nbsp;&nbsp; Note. All times are in milli-seconds
      </div>
      <!-- ---- end tab ---- -->

      <input type="radio" name="tabs" id="tabtwo">
      <label for="tabtwo"><i class="fas fa-chart-line"></i> &nbsp; Other Stats</label>
      <div class="tab">
        <div class="row">
          <% if (data.metrics.iterations) { %>
          <div class="box metricbox">
            <h4>Iterations</h4>
            <i class="fas fa-redo icon"></i>
            <div class="row">
              <div>Total</div>
              <div><%= data.metrics.iterations.values.count %></div>
            </div>
            <div class="row">
              <div>Rate</div>
              <div><%= data.metrics.iterations.values.rate.toFixed(2) %>/s</div>
            </div>
          </div>
          <% } %>

          <div class="box metricbox">
            <h4>Virtual Users</h4>
            <i class="fas fa-user icon"></i>
            <div class="row">
              <div>Min</div>
              <div><%= data.metrics.vus ? data.metrics.vus.values.min : 1 %></div>
            </div>
            <div class="row">
              <div>Max</div>
              <div><%= data.metrics.vus ? data.metrics.vus.values.max : 1 %></div>
            </div>
          </div>
        </div>
      </div>
      <!-- ---- end tab ---- -->

      <input type="radio" name="tabs" id="tabthree">
      <label for="tabthree" hidden><i class="fas fa-tasks"></i> Checks & Groups</label>
      <div class="tab">

        <% for(group of data.root_group.groups) { %>
        <h2>&bull; Group - <%= group.name %></h2>
        <table class="pure-table pure-table-horizontal" style="width: 100%">
          <thead>
            <tr>
              <th>Check Name</th>
              <th>Passes</th>
              <th>Failures</th>
            </tr>
          </thead>
          <% for(check of group.checks) { %>
          <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">
            <td width="50%"><%= check.name %></td>
            <td><%= check.passes %></td>
            <td><%= check.fails %></td>
          </tr>
          <% } %>
        </table>
        <br>
        <% } %>

        <h2>&bull; Other Checks</h2>
        <table class="pure-table pure-table-horizontal" style="width: 100%">
          <thead>
            <tr>
              <th>Check Name</th>
              <th>Passes</th>
              <th>Failures</th>
            </tr>
          </thead>
          <% for(check of data.root_group.checks) { %>
          <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">
            <td width="50%"><%= check.name %></td>
            <td><%= check.passes %></td>
            <td><%= check.fails %></td>
          </tr>
          <% } %>
        </table>
      </div>
      <!-- ---- end tab ---- -->

      <input type="radio" name="tabs" id="tabfour">
      <label for="tabfour"><i class="fas fa-tasks"></i> Threshold Limits</label>
      <div class="tab">
        <h1>&bull; Thresholds</h1>

        <%
        function splitThresholds(threshold) {
          thresholdlist = JSON.stringify(threshold)
          thresholdlist = thresholdlist.replace("[", "")
          thresholdlist = thresholdlist.replace("]", "")
          thresholdlist = thresholdlist.replaceAll('"', "")
          return thresholdlist.split(",")
        }

      for(metricName of standardMetrics) { 
        if(!data.metrics[metricName]) { continue }
        var metric = data.metrics[metricName] 
      %>
        <!-- need to add what this threshold applies to and clean up  -->
        <% if(metric.thresholds) { thresholdArray = splitThresholds(Object.keys(metric.thresholds)) %>
        <h2>&bull; <%= metricName %></h2>
        <div class="row">
          <% for(thresh of thresholdArray) {%>
          <div class="box metricbox">
            <h4> <%= thresh%> </h4>
          </div>
          <% } %>
        </div>
        <% } %>
        <% } %>
      </div>

      <!-- ---- end tab ---- -->

    </div>
    <footer>K6 Reporter v<%= version %> - Ben Coleman 2021, <a href="https://github.com/benc-uk/k6-reporter">[GitHub]</a></footer>
</body>

</html>